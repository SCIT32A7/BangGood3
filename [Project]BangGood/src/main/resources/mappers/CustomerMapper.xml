<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="global.sesoc.banggood.dao.CustomerDAO">
	
	<!-- 회원가입 -->
 	<insert id="customer_insert" parameterType="Customer">
		insert into customer (custid, name, password, email, phone)
		values(#{custid}, #{name}, #{password}, #{email}, #{phone})
	</insert>
	
	<!-- 로그인 및 수정 전 검색 -->
	<select id="customer_select" resultType="Customer" parameterType="String">
		select * from customer where custid = #{custid}
	</select>
	
	<!-- 개인정보 수정 -->
	<update id="customer_update" parameterType="Customer">
		update customer set password = #{password}, phone = #{phone}
		where custid = #{custid}
	</update>
	
	<!-- 내 등록 매물 보기 -->
	<select id="see_myinsert" parameterType="String" resultType="Property_list">
		select
			pro.property_no property_no, pro.custid custid,
			pro.property_title property_title, pro.rent_type rent_type, 
			pro.property_inputdate property_inputdate, pro.property_hits property_hits,
			pro.reply_count reply_count, pro.property_like property_like, 
			pro.deposit deposit, pro.month_fee month_fee,
			pro.maintence_fee maintence_fee, pro.built_year built_year,
            pro.roomsize roomsize, pro.floor floor,
			pro.isaccessible isaccessible, pro.issoldout issoldout,
			pic.pic_name pic_name, pic.pic_savename pic_savename 
		from
			(select property_no, custid, property_title, rent_type, property_inputdate,
				property_hits, reply_count, property_like, deposit, month_fee,
				maintence_fee, built_year, roomsize, floor, isaccessible, issoldout		
				from property where custid = #{custid}) pro,		
			(select property_no, pic_name, pic_savename
				from picture where pic_division = 'plan') pic
		where pro.property_no = pic.property_no 
	</select>
	
	<!-- 장바구니 등록 -->
	<insert id="insert_cart" parameterType="map">
		insert into cart (cart_no, custid, property_no) 
		values(seq_cart_no.nextval, #{custid}, #{property_no})
	</insert>
	
	<!-- 장바구니 내역 삭제 -->
	<delete id="delete_cart" parameterType="_int">
	 	delete cart where property_no = #{property_no}
	</delete>
	
	 <!--  장바구나 등록시 좋아요 증가 -->
   <update id="add_property_like" parameterType="_int">   
   	update property set property_like = property_like+1 where property_no = #{property_no}
   </update>   
   
   <!-- 좋아요 수 감소 -->
   <update id="sub_property_like" parameterType="_int">   
   	update property set property_like = property_like-1 where property_no = #{property_no}
   </update>      
	
	<!-- 장바구니 목록 보기 -->
	<select id="see_myCart" parameterType="String" resultType="Property_list">
		select 
			pro.property_no property_no, cart.cart_no, 
			pro.property_title property_title, 
			pro.rent_type rent_type, pro.custid custid, 
			pro.property_inputdate property_inputdate,
			pro.property_hits property_hits, pro.reply_count reply_count, 
			pro.property_like property_like, pro.deposit deposit, 
			pro.month_fee month_fee,
			pro.maintence_fee maintence_fee, pro.built_year built_year,
            pro.roomsize roomsize, pro.floor floor,
			pic.pic_name pic_name, pic.pic_savename pic_savename
		from
			(select cart_no, property_no 
				from cart
				where custid = #{custid}) cart,
			(select property_no, custid, property_title, rent_type, property_inputdate,
				property_hits, reply_count, property_like, deposit, month_fee, 
				maintence_fee, built_year, roomsize, floor, isaccessible 		
				from property) pro,		
			(select property_no, pic_name, pic_savename
				from picture where pic_division = 'plan') pic 
		where cart.property_no = pro.property_no
		and cart.property_no = pic.property_no
	</select>
	
	<!-- 오늘 읽어본 매물 보기 -->
	<select id="see_myclick" parameterType="Integer" resultType="Property_list">
		select
			pro.property_no property_no, pro.custid custid,
			pro.property_title property_title, pro.rent_type rent_type, 
			pro.property_inputdate property_inputdate, pro.property_hits property_hits,
			pro.reply_count reply_count, pro.property_like property_like, 
			pro.deposit deposit, pro.month_fee month_fee,
			pro.maintence_fee maintence_fee, pro.built_year built_year,
            pro.roomsize roomsize, pro.floor floor,
			pic.pic_name pic_name, pic.pic_savename pic_savename 
		from
			(select property_no, custid, property_title, rent_type, property_inputdate,
				property_hits, reply_count, property_like, deposit, month_fee,
				maintence_fee, built_year, roomsize, floor 
				from property where property_no = #{property_no}) pro,		
			(select property_no, pic_name, pic_savename
				from picture where pic_division = 'plan') pic
		where pro.property_no = pic.property_no 
	</select>
</mapper>